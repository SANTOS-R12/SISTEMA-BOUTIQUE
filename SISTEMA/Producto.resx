<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHCYvAGJsFQCzMgAAwz0RAL5WAwCXZx0Aw0INAMJfBgDnXgAAwWIFAM9gAADCagUAwGMJAMxt
        DADXZQAAznAAANlyAADFZhgAz3gSAMRxGQDaeBoA6G0AAPpvEQDgdhUA02MiAMt0KADUeyAA2XsiANh+
        KwDTbDEAy3cwANV3NADVejYA1nU6ANV6OgDZezsA4n4/ANp/QQAAnwAAAKUBAACoAAAGqgoACq8JABin
        DQAHrBMAJ6YTACKeNwADuyYALKUnADa3KwBUjQMAT5oKAECuCQBSogkAR6UcAESpJABUqiYAXbU/AGSk
        KgBlqy0Ad6s0AGq+NQA1zD8AIr9AAAmxYQATpHYACsVBACnCQQA5yEIAO+ddABradQAq7GoAJ+B4AEPO
        YABF1XIAmaQ7APyIFQDfgywA3IQxAN+INwDRgToA3YM8AN+KOgD3hyQA6Ig2AOGLOwDriTgA9pc7ANqk
        LwCjtl8Azo1EANyBRADeiUEA2oNKANeNTQDciE0A2YZRANSMUQDbilQA3Y5aANyVXADliU0A/49LAOWR
        QwDqlU4A6ZhOAOKLUQDqjlAA+49SAO2RVQDjklwA6ZNaAO2bXAD0k1UA8ZpaAP2cXgDaoUAA/6ZdAPWz
        WADdlGMA3JdpAN+aawDjmmYA+5djAPOcYQD6m2MA4p9zANSwagDoq2EA7aBtAP6iYgD7rGQA+6JsAP6s
        bQD/sGkA6aNyAOutdwDipHsA5Kh/AOqseQD8pHIA/Kt0APOregD+qnoA/7FzAPOwfwD9sXsA/7x8ABpb
        iAAZVp8AHJSKABq7jAArt40AMLmXACmbswBNtpgANsmzAErJjQBS34wAUMiRAGXUjgBd7ooAaPaHAGDr
        mwBt/ZcAcP6WAFbIoQBt/aIAfPeiAGz/sAAHpMMABKPZACCiwgAAhu8AAIzyAACW9wAAqv0AALf+AAPI
        /QAC2fwAEtP/ACLI+QAk2f8AAOf+AAP5/gAS/P8AL/P/ADj7/wBuxdQAQOf4AFHv/wBT+/8ArK6XAN+/
        ngDkpoMA5auEAOiuggDlp4gA+62CAOmyhwDxsIMA/rSDAP+6gwD+tIoA8LuNAP27iwDqt5YA8LOQAP2y
        lADzvpEA/7ySAP+6mAD/uKAA/8WMAP7ClAD+w5oA9MidAP/KmwDsxKsA/8WiAP3KogDwx6wA+tSoAPTM
        uAD/1bAA/9q3AP/YvwD+4roAs/XQAIj4/wC+5fsApf7/ALP9/wD22MQA+NvWAPziwQD/7ccA++XIAP3q
        ywD45NcAwPX/AM/9/gDb+PgA+evlAPzz6gD/++0A+u/wAOv9+gD79PAA/vn0APP8/wD8/PsAv7H/ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAigAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxSeAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRmjmhSYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB5cJOQ
        TlNdJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXn3KhY1oFVZSJAAAAAAAAAAAAAAAAAAAAAAAAAAAACOF
        zoV+7+9qG1ZdIwAAAAAAAAAAAAAAAAAAAAAAAAAmkMqDdOTszOJxHFZTJAAAAAAAAAAAAAAAAAAAAAAA
        XMrLg4764nxV0+FxG1ZdIQAAAAAAAAAAAAAAAAAAAFyTy5Bn9vp0Ewxt1dxpHVNTIwAAAAAAAAAAAAAA
        AABrzs6Qk5H/3Q4QFjM70dhzTlNSIwAAAAAAAAAAAADDcNfOk5PXkfwYCRE0MCk3x9RzT1NSAAAAAAAA
        AAAAeoLY08zK08qE/JYGNUNAKCkuicx9UFJkAAAAAAAAAGSP2tPTypDaF3Pys65CP0QoKSksgMp9UyEA
        AAAAAAAAe93X18qO1k0B5+izsa+XRSsoKSk9zpN9JAAAAAAAAIqS3deTfthUlbj7wLOxsrCbSiooKD2T
        y8p9XAAAAAAAXtjX7+PLWAS0uv+6tLKysq+eSyonPJGRzsxuYQAAAABe4YXj9VcPArS6/+mzsrKysJ6i
        Sy05kZGG15MeAAAAAILKcuPwCzZBtLm7+/OzsrKwoKOkRzmRh5TXb4oAAAB5bI3Oe/QOMpm+vLO1+Pu3
        s7CnqEk6gYbWzl4AAAAAzyWO11ES9B8ymra5uLS08fu/sZ1GTISG2shjAAAAAAB6e98fDRLqwjKfm7K5
        ubi45v+9MXWGlN/1YQAAAAAAAABeyYwUCmL15aijnKy5ubmswfrudtbO3vR5AAAAAAAAAABkiNJRCFHw
        86imoa2zqy9Zy/r60hnq4AAAAAAAAAAAAAB/b99fBRLr+KimqZg4d4Z24fr3IvTDAAAAAAAAAAAAAACL
        b9llBRLr+KpIPoSGlOSMXvT5+mEAAAAAAAAAAAAAAAAAYNnFCAXg+FqDg5TkesQAyPDwYwAAAAAAAAAA
        AAAAAAAAXs3fFAPQ/N2U9mMAAAAAAGAAAAAAAAAAAAAAAAAAAAAAeIjuWwfi/+r32wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGDs3+3F8Pr6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTZe8Yg8P/bAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAHsAAAAmz3gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEAAAA
        AAAAAAAAAAAAAP//3////4////4H///8A///+AH///AA///gAH//wAA//4AAH/8AAA/8AAAP+AAAB/AA
        AAfwAAAH4AAAA+AAAAHgAAAB4AAAAcAAAAeAAAAPgAAAH8AAAB/gAAA/8AAAP/gAAD/+AAQ//wAff/+A
        H///4B////AP///7j////9//
</value>
  </data>
</root>